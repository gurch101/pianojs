{"version":3,"sources":["wheresmymind.mid","Piano.js","App.js","serviceWorker.js","index.js","lacrimosa.mid","rachmaninoff.mid"],"names":["module","exports","PianoKey","color","className","keyClassNames","Array","map","val","octaveNum","idx","keyNumberInOctave","undefined","Soundfont","require","songs","rachmaninoff","lacrimosa","midiNoteToIndex","note","indexToMidiNote","getNoteClassName","currentTick","classNames","rh","selected","sustain","ticks","App","state","currentTickIndex","midi","selectedKeys","notes","currentSong","getNotesForTick","tick","filter","durationTicks","key","reduce","acc","curr","previous","currentNoteIndex","findIndex","selectedNotes","setState","next","nextTickIndex","updatePosition","e","play","Object","keys","indexOf","parseInt","forEach","piano","setCurrentSong","loadSong","target","value","this","song","songUrl","Midi","fromUrl","tracks","sort","a","b","instrument","AudioContext","style","textAlign","marginBottom","onChange","onClick","width","margin","min","max","length","Piano","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b88cdc9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wheresmymind.32304232.mid\";","import React from \"react\";\n\nconst NUM_OCTAVES = 7;\nconst KEYS_IN_OCTAVE = 12;\n\nconst getColor = keyNumberInOctave =>\n  (keyNumberInOctave <= 5 && keyNumberInOctave % 2 === 1) || (keyNumberInOctave > 5 && keyNumberInOctave % 2 === 0)\n    ? \"white\"\n    : \"black\";\n\nconst PianoKey = ({ color, className }) => {\n  return <div className={`${color === \"black\" ? \"black-key\" : \"white-key\"} ${className ? className : \"\"}`}></div>;\n};\n\nexport default ({ keyClassNames }) => {\n  return (\n    <div className=\"piano\">\n      <PianoKey color=\"white\" className={keyClassNames[0]} />\n      <PianoKey color=\"black\" className={keyClassNames[1]} />\n      <PianoKey color=\"white\" className={keyClassNames[2]} />\n      {[...Array(NUM_OCTAVES)].map((val, octaveNum) => {\n        return [...Array(KEYS_IN_OCTAVE)].map((val, idx) => {\n          return <PianoKey color={getColor(idx + 1)} className={keyClassNames[octaveNum * KEYS_IN_OCTAVE + idx + 3]} />;\n        });\n      })}\n      <PianoKey color=\"white\" className={keyClassNames[87] !== undefined} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Midi } from \"@tonejs/midi\";\nimport Slider from \"rc-slider\";\nimport Piano from \"./Piano\";\nimport \"rc-slider/assets/index.css\";\nimport \"./App.css\";\nimport wheresmymind from \"./wheresmymind.mid\";\nimport lacrimosa from \"./lacrimosa.mid\";\nimport rachmaninoff from \"./rachmaninoff.mid\";\nimport classNames from \"classnames\";\nconst Soundfont = require(\"soundfont-player\");\n\nconst songs = {\n  \"./rachmaninoff.mid\": rachmaninoff,\n  \"./lacrimosa.mid\": lacrimosa\n};\n\nconst midiNoteToIndex = note => note - 21;\nconst indexToMidiNote = idx => idx + 21;\nconst getNoteClassName = (note, currentTick) => {\n  return classNames({\n    \"rh-selected\": note.rh,\n    selected: !note.rh,\n    sustain: currentTick > note.ticks\n  });\n};\n\nclass App extends React.Component {\n  state = {\n    currentTickIndex: -1,\n    midi: {},\n    selectedKeys: {},\n    notes: [],\n    currentSong: \"./lacrimosa.mid\"\n  };\n\n  async componentDidMount() {\n    this.loadSong(this.state.currentSong);\n  }\n\n  async loadSong(song) {\n    const songUrl = songs[song];\n    const midi = await Midi.fromUrl(songUrl);\n    const notes = [\n      ...midi.tracks[0].notes,\n      ...(midi.tracks[1] ? midi.tracks[1].notes : []).map(note => ({ ...note, rh: true })),\n      ...(midi.tracks[2] ? midi.tracks[2].notes : []).map(note => ({ ...note, rh: true }))\n    ];\n    notes.sort((a, b) => (a.ticks - b.ticks === 0 ? a.durationTicks - b.durationTicks : a.ticks - b.ticks));\n    this.piano = await Soundfont.instrument(new AudioContext(), \"acoustic_grand_piano\");\n    this.setState(\n      {\n        currentSong: song,\n        midi,\n        notes,\n        currentTickIndex: -1,\n        selectedKeys: {}\n      },\n      () => {\n        this.next();\n      }\n    );\n  }\n\n  getNotesForTick = tick => {\n    const notes = this.state.notes;\n    return notes\n      .filter(note => note.ticks === tick || (note.ticks <= tick && note.ticks + note.durationTicks > tick))\n      .map(note => ({ rh: note.rh, ticks: note.ticks, key: midiNoteToIndex(note.midi) }))\n      .reduce((acc, curr) => ({ ...acc, [curr.key]: getNoteClassName(curr, tick) }), {});\n  };\n\n  previous = () => {\n    const notes = this.state.notes;\n    const currentNoteIndex = notes.findIndex(note => note.ticks === notes[this.state.currentTickIndex].ticks);\n    if (currentNoteIndex > 0) {\n      const selectedNotes = this.getNotesForTick(notes[currentNoteIndex - 1].ticks);\n      this.setState({\n        currentTickIndex: currentNoteIndex - 1,\n        selectedKeys: selectedNotes\n      });\n    }\n  };\n\n  next = () => {\n    const notes = this.state.notes;\n    let nextTickIndex = 0;\n    if (this.state.currentTickIndex !== -1) {\n      nextTickIndex = notes.findIndex(note => note.ticks > notes[this.state.currentTickIndex].ticks);\n    }\n    const selectedNotes = this.getNotesForTick(notes[nextTickIndex].ticks);\n    this.setState({\n      currentTickIndex: nextTickIndex,\n      selectedKeys: selectedNotes\n    });\n  };\n\n  updatePosition = e => {\n    const notes = this.state.notes;\n    this.setState({\n      currentTickIndex: e,\n      selectedKeys: this.getNotesForTick(notes[e].ticks)\n    });\n  };\n\n  play = () => {\n    Object.keys(this.state.selectedKeys)\n      .filter(note => this.state.selectedKeys[note].indexOf(\"sustain\") < 0)\n      .map(note => indexToMidiNote(parseInt(note)))\n      .forEach(note => {\n        this.piano.play(note);\n      });\n  };\n\n  setCurrentSong = e => {\n    this.loadSong(e.target.value);\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\n          <select value={this.state.currentSong} onChange={this.setCurrentSong}>\n            <option value=\"./lacrimosa.mid\">Lacrimosa</option>\n            <option value=\"./rachmaninoff.mid\">Rachmaninoff</option>\n          </select>\n          <p style={{ color: \"white\" }}>{this.state.currentTickIndex}</p>\n          <button className=\"mr1\" onClick={this.previous}>\n            Previous\n          </button>\n          <button className=\"mr1\" onClick={this.next}>\n            Next\n          </button>\n          <button onClick={this.play}>Play</button>\n        </div>\n        <div style={{ width: \"50%\", margin: \"0 auto\", marginBottom: \"10px\" }}>\n          <Slider\n            min={0}\n            max={this.state.notes.length - 1}\n            onChange={this.updatePosition}\n            value={this.state.currentTickIndex}\n          />\n        </div>\n        <Piano keyClassNames={this.state.selectedKeys} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lacrimosa.a2f5513e.mid\";","module.exports = __webpack_public_path__ + \"static/media/rachmaninoff.9302bc1a.mid\";"],"sourceRoot":""}